// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ordersvc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The sum request contains two parameters.
type SumRequest struct {
	A                    int64    `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5413b25c9125772, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *SumRequest) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

// The sum response contains the result of the calculation.
type SumReply struct {
	V                    int64    `protobuf:"varint,1,opt,name=v,proto3" json:"v,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumReply) Reset()         { *m = SumReply{} }
func (m *SumReply) String() string { return proto.CompactTextString(m) }
func (*SumReply) ProtoMessage()    {}
func (*SumReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5413b25c9125772, []int{1}
}

func (m *SumReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumReply.Unmarshal(m, b)
}
func (m *SumReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumReply.Marshal(b, m, deterministic)
}
func (m *SumReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumReply.Merge(m, src)
}
func (m *SumReply) XXX_Size() int {
	return xxx_messageInfo_SumReply.Size(m)
}
func (m *SumReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SumReply.DiscardUnknown(m)
}

var xxx_messageInfo_SumReply proto.InternalMessageInfo

func (m *SumReply) GetV() int64 {
	if m != nil {
		return m.V
	}
	return 0
}

func (m *SumReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

// The getbyid request contains order id.
type GetByIDRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIDRequest) Reset()         { *m = GetByIDRequest{} }
func (m *GetByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetByIDRequest) ProtoMessage()    {}
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5413b25c9125772, []int{2}
}

func (m *GetByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDRequest.Unmarshal(m, b)
}
func (m *GetByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDRequest.Marshal(b, m, deterministic)
}
func (m *GetByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDRequest.Merge(m, src)
}
func (m *GetByIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetByIDRequest.Size(m)
}
func (m *GetByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDRequest proto.InternalMessageInfo

func (m *GetByIDRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

// The getbyid request contains order object and error.
type GetByIDReply struct {
	Order                *GetByIDReply_OrderData `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Err                  string                  `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetByIDReply) Reset()         { *m = GetByIDReply{} }
func (m *GetByIDReply) String() string { return proto.CompactTextString(m) }
func (*GetByIDReply) ProtoMessage()    {}
func (*GetByIDReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5413b25c9125772, []int{3}
}

func (m *GetByIDReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDReply.Unmarshal(m, b)
}
func (m *GetByIDReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDReply.Marshal(b, m, deterministic)
}
func (m *GetByIDReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDReply.Merge(m, src)
}
func (m *GetByIDReply) XXX_Size() int {
	return xxx_messageInfo_GetByIDReply.Size(m)
}
func (m *GetByIDReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDReply proto.InternalMessageInfo

func (m *GetByIDReply) GetOrder() *GetByIDReply_OrderData {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *GetByIDReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type GetByIDReply_OrderData struct {
	ID                   int64                                `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PartnerId            int64                                `protobuf:"varint,2,opt,name=partner_id,json=partnerId,proto3" json:"partner_id,omitempty"`
	State                string                               `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	CreateDate           *timestamp.Timestamp                 `protobuf:"bytes,4,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
	AmountTotal          float32                              `protobuf:"fixed32,5,opt,name=amount_total,json=amountTotal,proto3" json:"amount_total,omitempty"`
	WarehouseId          int32                                `protobuf:"varint,6,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id,omitempty"`
	OrderItems           []*GetByIDReply_OrderData_OrderItems `protobuf:"bytes,7,rep,name=order_items,json=orderItems,proto3" json:"order_items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *GetByIDReply_OrderData) Reset()         { *m = GetByIDReply_OrderData{} }
func (m *GetByIDReply_OrderData) String() string { return proto.CompactTextString(m) }
func (*GetByIDReply_OrderData) ProtoMessage()    {}
func (*GetByIDReply_OrderData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5413b25c9125772, []int{3, 0}
}

func (m *GetByIDReply_OrderData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDReply_OrderData.Unmarshal(m, b)
}
func (m *GetByIDReply_OrderData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDReply_OrderData.Marshal(b, m, deterministic)
}
func (m *GetByIDReply_OrderData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDReply_OrderData.Merge(m, src)
}
func (m *GetByIDReply_OrderData) XXX_Size() int {
	return xxx_messageInfo_GetByIDReply_OrderData.Size(m)
}
func (m *GetByIDReply_OrderData) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDReply_OrderData.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDReply_OrderData proto.InternalMessageInfo

func (m *GetByIDReply_OrderData) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *GetByIDReply_OrderData) GetPartnerId() int64 {
	if m != nil {
		return m.PartnerId
	}
	return 0
}

func (m *GetByIDReply_OrderData) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *GetByIDReply_OrderData) GetCreateDate() *timestamp.Timestamp {
	if m != nil {
		return m.CreateDate
	}
	return nil
}

func (m *GetByIDReply_OrderData) GetAmountTotal() float32 {
	if m != nil {
		return m.AmountTotal
	}
	return 0
}

func (m *GetByIDReply_OrderData) GetWarehouseId() int32 {
	if m != nil {
		return m.WarehouseId
	}
	return 0
}

func (m *GetByIDReply_OrderData) GetOrderItems() []*GetByIDReply_OrderData_OrderItems {
	if m != nil {
		return m.OrderItems
	}
	return nil
}

type GetByIDReply_OrderData_OrderItems struct {
	ProductId            int64    `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PriceUnit            float32  `protobuf:"fixed32,3,opt,name=price_unit,json=priceUnit,proto3" json:"price_unit,omitempty"`
	Quantity             int32    `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIDReply_OrderData_OrderItems) Reset()         { *m = GetByIDReply_OrderData_OrderItems{} }
func (m *GetByIDReply_OrderData_OrderItems) String() string { return proto.CompactTextString(m) }
func (*GetByIDReply_OrderData_OrderItems) ProtoMessage()    {}
func (*GetByIDReply_OrderData_OrderItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5413b25c9125772, []int{3, 0, 0}
}

func (m *GetByIDReply_OrderData_OrderItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDReply_OrderData_OrderItems.Unmarshal(m, b)
}
func (m *GetByIDReply_OrderData_OrderItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDReply_OrderData_OrderItems.Marshal(b, m, deterministic)
}
func (m *GetByIDReply_OrderData_OrderItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDReply_OrderData_OrderItems.Merge(m, src)
}
func (m *GetByIDReply_OrderData_OrderItems) XXX_Size() int {
	return xxx_messageInfo_GetByIDReply_OrderData_OrderItems.Size(m)
}
func (m *GetByIDReply_OrderData_OrderItems) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDReply_OrderData_OrderItems.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDReply_OrderData_OrderItems proto.InternalMessageInfo

func (m *GetByIDReply_OrderData_OrderItems) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *GetByIDReply_OrderData_OrderItems) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetByIDReply_OrderData_OrderItems) GetPriceUnit() float32 {
	if m != nil {
		return m.PriceUnit
	}
	return 0
}

func (m *GetByIDReply_OrderData_OrderItems) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "pb.SumRequest")
	proto.RegisterType((*SumReply)(nil), "pb.SumReply")
	proto.RegisterType((*GetByIDRequest)(nil), "pb.GetByIDRequest")
	proto.RegisterType((*GetByIDReply)(nil), "pb.GetByIDReply")
	proto.RegisterType((*GetByIDReply_OrderData)(nil), "pb.GetByIDReply.OrderData")
	proto.RegisterType((*GetByIDReply_OrderData_OrderItems)(nil), "pb.GetByIDReply.OrderData.OrderItems")
}

func init() { proto.RegisterFile("ordersvc.proto", fileDescriptor_c5413b25c9125772) }

var fileDescriptor_c5413b25c9125772 = []byte{
	// 443 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x51, 0x6f, 0x94, 0x40,
	0x10, 0xc7, 0x0b, 0x94, 0xb6, 0x37, 0x5c, 0x2e, 0xcd, 0xc6, 0x07, 0x42, 0x62, 0x44, 0x92, 0x26,
	0xc4, 0x07, 0xaa, 0xe7, 0xa3, 0x6f, 0x86, 0x68, 0x78, 0x32, 0xd9, 0xd6, 0x67, 0xb2, 0xc0, 0x58,
	0x49, 0x0e, 0x96, 0x2e, 0xc3, 0x99, 0xf3, 0x8b, 0xf8, 0x25, 0xfd, 0x10, 0x66, 0x77, 0x39, 0x7a,
	0x6a, 0xfa, 0x36, 0xf3, 0x9f, 0xdf, 0xec, 0xcc, 0xfc, 0x01, 0x36, 0x52, 0x35, 0xa8, 0xc6, 0x7d,
	0x9d, 0x0d, 0x4a, 0x92, 0x64, 0xee, 0x50, 0x45, 0xaf, 0x1e, 0xa4, 0x7c, 0xd8, 0xe1, 0xad, 0x51,
	0xaa, 0xe9, 0xdb, 0x2d, 0xb5, 0x1d, 0x8e, 0x24, 0xba, 0xc1, 0x42, 0x49, 0x0a, 0x70, 0x37, 0x75,
	0x1c, 0x1f, 0x27, 0x1c, 0x89, 0xad, 0xc1, 0x11, 0xa1, 0x13, 0x3b, 0xa9, 0xc7, 0x1d, 0xa1, 0xb3,
	0x2a, 0x74, 0x6d, 0x56, 0x25, 0x6f, 0xe0, 0xca, 0x90, 0xc3, 0xee, 0xa0, 0x2b, 0xfb, 0x23, 0xb7,
	0x67, 0xd7, 0xe0, 0xa1, 0x52, 0x86, 0x5c, 0x71, 0x1d, 0x26, 0x31, 0x6c, 0x3e, 0x23, 0x7d, 0x3c,
	0x14, 0xf9, 0xf1, 0xe5, 0x0d, 0xb8, 0x45, 0x6e, 0x5a, 0x56, 0xdc, 0x2d, 0xf2, 0xe4, 0xb7, 0x07,
	0xeb, 0x05, 0xd1, 0x4f, 0xbe, 0x05, 0xdf, 0xec, 0x6f, 0x98, 0x60, 0x1b, 0x65, 0x43, 0x95, 0x9d,
	0x02, 0xd9, 0x17, 0x5d, 0xcd, 0x05, 0x09, 0x6e, 0xc1, 0xff, 0xc7, 0x46, 0xbf, 0x3c, 0x58, 0x2d,
	0xd8, 0xc9, 0x48, 0x4f, 0x8f, 0x64, 0x2f, 0x01, 0x06, 0xa1, 0xa8, 0x47, 0x55, 0xb6, 0xcd, 0x7c,
	0xd7, 0x6a, 0x56, 0x8a, 0x86, 0xbd, 0x00, 0x7f, 0x24, 0x41, 0x18, 0x7a, 0xe6, 0x41, 0x9b, 0xb0,
	0x0f, 0x10, 0xd4, 0x0a, 0x05, 0x61, 0xd9, 0xe8, 0xda, 0xf9, 0xbc, 0x9c, 0xb5, 0x35, 0x3b, 0xda,
	0x9a, 0xdd, 0x1f, 0x6d, 0xe5, 0x60, 0xf1, 0x5c, 0x37, 0xbf, 0x86, 0xb5, 0xe8, 0xe4, 0xd4, 0x53,
	0x49, 0x92, 0xc4, 0x2e, 0xf4, 0x63, 0x27, 0x75, 0x79, 0x60, 0xb5, 0x7b, 0x2d, 0x69, 0xe4, 0x87,
	0x50, 0xf8, 0x5d, 0x4e, 0x23, 0xea, 0xb5, 0x2e, 0x62, 0x27, 0xf5, 0x79, 0xb0, 0x68, 0x45, 0xc3,
	0x3e, 0x41, 0x60, 0x0e, 0x2e, 0x5b, 0xc2, 0x6e, 0x0c, 0x2f, 0x63, 0x2f, 0x0d, 0xb6, 0x37, 0xcf,
	0xfb, 0x63, 0xa3, 0x42, 0xc3, 0x1c, 0xe4, 0x12, 0x47, 0x3f, 0x01, 0x9e, 0x2a, 0xc6, 0x0d, 0x25,
	0x9b, 0xa9, 0x26, 0x3d, 0xd6, 0x99, 0xdd, 0xb0, 0x4a, 0xd1, 0x30, 0x06, 0xe7, 0xbd, 0xe8, 0x70,
	0x76, 0xd7, 0xc4, 0xb6, 0xa5, 0xad, 0xb1, 0x9c, 0xfa, 0x96, 0x8c, 0x4d, 0xae, 0x6e, 0x69, 0x6b,
	0xfc, 0xda, 0xb7, 0xc4, 0x22, 0xb8, 0x7a, 0x9c, 0x44, 0x4f, 0x2d, 0x1d, 0x8c, 0x4f, 0x3e, 0x5f,
	0xf2, 0xad, 0x00, 0xdf, 0xcc, 0x66, 0x37, 0xe0, 0xdd, 0x4d, 0x1d, 0xdb, 0xe8, 0xf5, 0x9f, 0x7e,
	0xbc, 0x68, 0xbd, 0xe4, 0xc3, 0xee, 0x90, 0x9c, 0xb1, 0x77, 0x70, 0x39, 0x1f, 0xc7, 0xd8, 0x5f,
	0x97, 0x5a, 0xfc, 0xfa, 0xdf, 0xeb, 0x93, 0xb3, 0xea, 0xc2, 0x7c, 0x8c, 0xf7, 0x7f, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x93, 0x3b, 0xb4, 0xb0, 0x07, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderClient is the client API for Order service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderClient interface {
	// Sums two integers.
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumReply, error)
	// order details
	GetByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*GetByIDReply, error)
}

type orderClient struct {
	cc *grpc.ClientConn
}

func NewOrderClient(cc *grpc.ClientConn) OrderClient {
	return &orderClient{cc}
}

func (c *orderClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumReply, error) {
	out := new(SumReply)
	err := c.cc.Invoke(ctx, "/pb.Order/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) GetByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*GetByIDReply, error) {
	out := new(GetByIDReply)
	err := c.cc.Invoke(ctx, "/pb.Order/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServer is the server API for Order service.
type OrderServer interface {
	// Sums two integers.
	Sum(context.Context, *SumRequest) (*SumReply, error)
	// order details
	GetByID(context.Context, *GetByIDRequest) (*GetByIDReply, error)
}

// UnimplementedOrderServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServer struct {
}

func (*UnimplementedOrderServer) Sum(ctx context.Context, req *SumRequest) (*SumReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedOrderServer) GetByID(ctx context.Context, req *GetByIDRequest) (*GetByIDReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByID not implemented")
}

func RegisterOrderServer(s *grpc.Server, srv OrderServer) {
	s.RegisterService(&_Order_serviceDesc, srv)
}

func _Order_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Order/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Order_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Order/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).GetByID(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Order_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Order",
	HandlerType: (*OrderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _Order_Sum_Handler,
		},
		{
			MethodName: "GetByID",
			Handler:    _Order_GetByID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ordersvc.proto",
}
